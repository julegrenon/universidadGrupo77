/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package universidadgrupo.Vistas;

import java.awt.event.ActionListener;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import universidadgrupo.AccesoDatos.AlumnoData;
import universidadgrupo.AccesoDatos.InscripcionData;
import universidadgrupo.AccesoDatos.MateriaData;
import universidadgrupo.entidades.Alumno;
import universidadgrupo.entidades.Inscripcion;
import universidadgrupo.entidades.Materia;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;

/**
 *
 * @author sonia
 */
public class FormCargaDeNotas extends javax.swing.JInternalFrame {
    

    private DefaultTableModel modelo = new DefaultTableModel() {

        public boolean isCellEditable(int f, int c) {
            if (c==2){
                return true;
            }
            return false;
        }

    };

    private AlumnoData alumnoData = new AlumnoData();
    private InscripcionData inscripcionData = new InscripcionData();
    private MateriaData materiaData = new MateriaData();

    public FormCargaDeNotas() {
        initComponents();
        llenarComboBox();
        cargarColumnas();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableListaAlumnos = new javax.swing.JTable();
        jButtonGuardar = new javax.swing.JButton();
        jButtonSalir = new javax.swing.JButton();
        jComboBoxAlumnos = new javax.swing.JComboBox<>();

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Carga de notas");

        jLabel2.setText("Seleccione un alumno");

        jTableListaAlumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableListaAlumnos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableListaAlumnosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableListaAlumnos);

        jButtonGuardar.setText("Guardar");
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });

        jButtonSalir.setText("Salir");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });

        jComboBoxAlumnos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxAlumnosItemStateChanged(evt);
            }
        });
        jComboBoxAlumnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxAlumnosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(jButtonGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(jButtonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(141, 141, 141)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBoxAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBoxAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonGuardar)
                    .addComponent(jButtonSalir))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonSalirActionPerformed

    private void jComboBoxAlumnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxAlumnosActionPerformed
        cargarTablaVacia();
        cargarTabla();
    }//GEN-LAST:event_jComboBoxAlumnosActionPerformed

    private void jComboBoxAlumnosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxAlumnosItemStateChanged
        
    }//GEN-LAST:event_jComboBoxAlumnosItemStateChanged

    private void jTableListaAlumnosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableListaAlumnosMouseClicked
       
          /* int filaSeleccionada = jTableListaAlumnos.getSelectedRow();
           //int columnaSeleccionada= jTableListaAlumnos.getSelectedColumn();
        
        if (filaSeleccionada != -1) {
            double nota = (double) jTableListaAlumnos.getValueAt(filaSeleccionada, 2);
             
        }*/
           
          // inscripcionData.actualizarNota(alumnoSeleccionado.getIdAlumno(),idMat, nota);
       
    }//GEN-LAST:event_jTableListaAlumnosMouseClicked

    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed
 
        try {
            int filaSeleccionada = jTableListaAlumnos.getSelectedRow();

            Alumno alumnoSeleccionado = (Alumno) jComboBoxAlumnos.getSelectedItem();
            int idMat = (Integer) jTableListaAlumnos.getValueAt(filaSeleccionada, 0);
            String not = (String) jTableListaAlumnos.getValueAt(filaSeleccionada, 2);
            double nota = Double.parseDouble(not);

            inscripcionData.actualizarNota(alumnoSeleccionado.getIdAlumno(), idMat, nota);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "No puede haber campos vacíos");
        } catch (NumberFormatException ex2) {
            JOptionPane.showMessageDialog(null, "Formato de nota incorrecto");
        }

    }//GEN-LAST:event_jButtonGuardarActionPerformed
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JComboBox<Alumno> jComboBoxAlumnos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableListaAlumnos;
    // End of variables declaration//GEN-END:variables

    //METODOS
    
    //llenar combo box lista alumnos
    private void llenarComboBox() {
        List<Alumno> nombres = alumnoData.listarAlumnos();
        for (Alumno nombre : nombres) {

            jComboBoxAlumnos.addItem(nombre);

        }
    }

    //setea nombre de columnas
    private void cargarColumnas() {
        modelo.addColumn("Código");
        modelo.addColumn("Materia");
        modelo.addColumn("Nota");
        jTableListaAlumnos.setModel(modelo);
    }

    private Alumno obtenerAlumnoSeleccionado() {

        return null;
    }

    private void cargarTabla() {

        modelo.setRowCount(0);
        Alumno alumnoSeleccionado = (Alumno) jComboBoxAlumnos.getSelectedItem();
        // Inscripcion inscripcionSeleccionada=(Inscripcion) inscripcionData.obtenerInscripcionesPorAlumno(alumnoSeleccionado.getIdAlumno());
        //Alumno alumnoSeleccionado = (Alumno)jComboBoxAlumnos.getSelectedItem();
        //String alumnoSeleccionado = jComboBoxAlumnos.getSelectedItem().toString();

        if (alumnoSeleccionado != null) {

            List<Inscripcion> inscripciones = inscripcionData.obtenerInscripcionesPorAlumno(alumnoSeleccionado.getIdAlumno());
            for (Inscripcion inscripcion : inscripciones) {

                modelo.addRow(new Object[]{
                    inscripcion.getMateria().getIdMateria(), inscripcion.getMateria().getNombre(), inscripcion.getNota()
                });

            }
        }
    }

    private void cargarTablaVacia() {
        while (modelo.getRowCount() > 0) {
            modelo.removeRow(0);
        }
    }

}
